@page "/openapi"
@page "/openapi/resource/{resourceName}"

@using Aspire.Dashboard.Resources

@namespace Aspire.Dashboard.Components.Pages

<PageTitle><ApplicationName ResourceName="@nameof(Dashboard.Resources.OpenApi.OpenApiPageTitle)" Loc="@Loc" /></PageTitle>

<div class="page-content-container">
    <AspirePageContentLayout
        AddNewlineOnToolbar="true"
        @ref="_contentLayout"
        HeaderStyle="margin-bottom: calc(var(--design-unit) * 2px);"
        MobileToolbarButtonText="@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiViewAttributesToolbar)]">
        <PageTitleSection>
            <h1 class="page-header">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiHeader)]</h1>
        </PageTitleSection>
        <ToolbarSection>
            <ResourceSelect Resources="_resources"
                            AriaLabel="@ControlsStringsLoc[nameof(ControlsStrings.ResourceLabel)]"
                            @bind-SelectedResource="PageViewModel.SelectedOption"
                            @bind-SelectedResource:after="HandleSelectedOptionChangedAsync" />

            @if (!ViewportInformation.IsDesktop && PageViewModel.Methods != null)
            {
                <FluentInputLabel Label="@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectAMethod)]" ForId="method-selector" />
                <FluentTreeView Id="method-selector" Class="method-tree" @bind-CurrentSelected="@PageViewModel.SelectedTreeItem" @bind-CurrentSelected:after="HandleSelectedTreeItemChangedAsync">
                    <ChildContent>
                        @foreach (var tag in PageViewModel.Methods.OrderBy(g => g.Key))
                        {
                            <FluentTreeItem @key="tag.Key" Text="@tag.Key" Data="@tag.Key" title="@tag.Key" InitiallyExpanded="true" InitiallySelected="false">
                                @foreach (var method in tag.Value.OrderBy(i => i.Method.ToString()).OrderBy(i => i.Name))
                                {
                                    <FluentTreeItem @key="method.Id" Class="nested" Data="@method" Text="@method.Name" title="@method.Description" InitiallySelected="false">
                                        <FluentBadge BackgroundColor="@method.BadgeColor" Fill="@method.BadgeColor" Style="margin-right: 16px" slot="end">@method.Method.ToString()</FluentBadge>
                                    </FluentTreeItem>
                                }
                            </FluentTreeItem>
                        }
                    </ChildContent>
                </FluentTreeView>
            }
        </ToolbarSection>
        <MainSection>
            <div style="width: 100%; height: 100%; overflow: auto;">
                @if (PageViewModel.SelectedResource == null)
                {
                    <div class="empty-content">
                        @if (ViewportInformation.IsDesktop)
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock"/>@:&nbsp;
                            @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectAResource)]
                        }
                        else
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock"/>@:&nbsp;
                            <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectAResource)]</FluentAnchor>
                        }
                    </div>
                }
                else if (PageViewModel.Methods == null)
                {
                    <div class="empty-content">
                        @if (ViewportInformation.IsDesktop)
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock" />@:&nbsp;
                            @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiNoSpecificationForResource)]
                        }
                        else
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock" />@:&nbsp;
                            <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiNoSpecificationForResource)]</FluentAnchor>
                        }
                    </div>
                }
                else
                {
                    <FluentSplitter BarHandle="@ViewportInformation.IsDesktop"
                                    Style="height:100%"
                                    Panel1Size="@(ViewportInformation.IsDesktop ? "2fr" : "0")"
                                    Panel2Size="8fr"
                                    BarSize="@(ViewportInformation.IsDesktop ? 5 : 0)">
                        <Panel1>
                            @if (ViewportInformation.IsDesktop)
                            {
                                <FluentTreeView Id="method-selector" Class="method-tree" @bind-CurrentSelected="@PageViewModel.SelectedTreeItem" @bind-CurrentSelected:after="HandleSelectedTreeItemChangedAsync">
                                    <ChildContent>
                                        @foreach (var tag in PageViewModel.Methods.OrderBy(g => g.Key))
                                        {
                                            <FluentTreeItem @key="tag.Key" Text="@tag.Key" Data="@tag.Key" title="@tag.Key" InitiallyExpanded="true" InitiallySelected="false">
                                                @foreach (var method in tag.Value.OrderBy(i => i.Method.ToString()).OrderBy(i => i.Name))
                                                {
                                                    <FluentTreeItem @key="method.Id" Class="nested" Data="@method" Text="@method.Name" title="@method.Description" InitiallySelected="false">
                                                        <FluentBadge BackgroundColor="@method.BadgeColor" Fill="@method.BadgeColor" slot="end">@method.Method.ToString()</FluentBadge>
                                                    </FluentTreeItem>
                                                }
                                            </FluentTreeItem>
                                        }
                                    </ChildContent>
                                </FluentTreeView>
                            }
                        </Panel1>
                        <Panel2>
                            <div class="method-content">
                                @if (PageViewModel.SelectedMethod == null)
                                {
                                    @if (ViewportInformation.IsDesktop)
                                    {
                                        <p>@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectMethod)]</p>
                                    }
                                    else
                                    {
                                        <div class="empty-content">
                                            <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">
                                                @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectMethod)]
                                            </FluentAnchor>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <h3>Request:</h3>
                                    <FluentGrid>
                                        @if (ViewportInformation.IsDesktop)
                                        {
                                            <FluentGridItem sm="9" xl="10" xxl="11">
                                                <FluentTextField Style="width: 100%" ReadOnly="true" Value="@PageViewModel.SelectedMethod.Url">
                                                    <FluentBadge BackgroundColor="@PageViewModel.SelectedMethod.BadgeColor" Fill="highlight" slot="start">@PageViewModel.SelectedMethod.Method.ToString()</FluentBadge>
                                                </FluentTextField>
                                            </FluentGridItem>
                                            <FluentGridItem sm="3" xl="2" xxl="1">
                                                <FluentButton Style="width: 100%" Appearance="Appearance.Outline" OnClick="@SendRequest">
                                                    <FluentIcon Value="@s_playIcon" Width="12px" />
                                                    <span>@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSendRequest)]</span>
                                                </FluentButton>
                                            </FluentGridItem>
                                        }
                                        else
                                        {
                                            <FluentGridItem xs="12">
                                                <FluentTextField Style="width: 100%" ReadOnly="true" Value="@PageViewModel.SelectedMethod.Url">
                                                    <FluentBadge BackgroundColor="@PageViewModel.SelectedMethod.BadgeColor" Fill="highlight" slot="start">@PageViewModel.SelectedMethod.Method.ToString()</FluentBadge>
                                                </FluentTextField>
                                            </FluentGridItem>
                                            <FluentGridItem xs="12">
                                                <FluentButton Style="width: 100%" Appearance="Appearance.Outline" OnClick="@SendRequest">
                                                    <FluentIcon Value="@s_playIcon" Width="12px" />
                                                    <span>@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSendRequest)]</span>
                                                </FluentButton>
                                            </FluentGridItem>
                                        }
                                    </FluentGrid>
                                    @if (PageViewModel.SelectedMethod.RequestParameters.Count > 0)
                                    {
                                        <h5 style="margin-top: 16px">Parameters:</h5>
                                        <FluentGrid>
                                            @if (ViewportInformation.IsDesktop)
                                            {
                                                @foreach (var parameter in PageViewModel.SelectedMethod.RequestParameters)
                                                {
                                                    <FluentGridItem sm="4" md="3" xl="2" xxl="1">
                                                        <span>@parameter.Name</span>
                                                        @if (parameter.IsRequired)
                                                        {
                                                            <span style="color: lightcoral"> *</span>
                                                        }
                                                    </FluentGridItem>
                                                    <FluentGridItem sm="8" md="9" xl="10" xxl="11">
                                                        <FluentTextField Style="width: 100%" Value="@parameter.Value" ValueChanged="@((value) => { parameter.Value = value; })" />
                                                    </FluentGridItem>
                                                }
                                            }
                                            else
                                            {
                                                @foreach (var parameter in PageViewModel.SelectedMethod.RequestParameters)
                                                {
                                                    <FluentGridItem xs="12" sm="12">
                                                        <span>@parameter.Name</span>
                                                        @if (parameter.IsRequired)
                                                        {
                                                            <span style="color: lightcoral"> *</span>
                                                        }
                                                    </FluentGridItem>
                                                    <FluentGridItem xs="12" sm="12">
                                                        <FluentTextField Style="width: 100%" Value="@parameter.Value" ValueChanged="@((value) => { parameter.Value = value; })" />
                                                    </FluentGridItem>
                                                }
                                            }
                                        </FluentGrid>
                                    }
                                }
                            </div>
                        </Panel2>
                    </FluentSplitter>
                }
            </div>
        </MainSection>
    </AspirePageContentLayout>
</div>
