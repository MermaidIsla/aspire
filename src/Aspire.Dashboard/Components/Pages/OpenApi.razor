@page "/openapi"
@page "/openapi/resource/{resourceName}"

@using Aspire.Dashboard.Resources

@inject IStringLocalizer<ControlsStrings> ControlStringsLoc

@namespace Aspire.Dashboard.Components.Pages

<PageTitle><ApplicationName ResourceName="@nameof(Dashboard.Resources.OpenApi.OpenApiPageTitle)" Loc="@Loc" /></PageTitle>

<div class="page-content-container">
    <AspirePageContentLayout
        AddNewlineOnToolbar="true"
        @ref="_contentLayout"
        HeaderStyle="margin-bottom: calc(var(--design-unit) * 2px);"
        MobileToolbarButtonText="@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiViewAttributesToolbar)]">
        <PageTitleSection>
            <h1 class="page-header">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiHeader)]</h1>
        </PageTitleSection>
        <ToolbarSection>
            <ResourceSelect
                Resources="_resources"
                AriaLabel="@ControlsStringsLoc[nameof(ControlsStrings.ResourceLabel)]"
                @bind-SelectedResource="PageViewModel.SelectedOption"
                @bind-SelectedResource:after="HandleSelectedOptionChangedAsync" />

            @if (!ViewportInformation.IsDesktop && PageViewModel.Model is not null)
            {
                <TreeOpenApiMethodSelector
                    @ref="_treeOpenApiMethodSelector"
                    HandleSelectedTreeItemChangedAsync="@HandleSelectedTreeItemChangedAsync"
                    IncludeLabel="true"
                    SelectedTreeItem="@PageViewModel.SelectedTreeItem"
                    Tags="@PageViewModel.Model.Tags" />
            }
        </ToolbarSection>
        <MainSection>
            <div style="width: 100%; height: 100%; overflow: auto;">
                @if (PageViewModel.SelectedResource == null)
                {
                    <div class="empty-content">
                        @if (ViewportInformation.IsDesktop)
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock"/>@:&nbsp;
                            @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectAResource)]
                        }
                        else
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock"/>@:&nbsp;
                            <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectAResource)]</FluentAnchor>
                        }
                    </div>
                }
                else if (PageViewModel.Model == null)
                {
                    <div class="empty-content">
                        @if (ViewportInformation.IsDesktop)
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock" />@:&nbsp;
                            @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiNoSpecificationForResource)]
                        }
                        else
                        {
                            <FluentIcon Icon="Icons.Regular.Size24.CodeBlock" />@:&nbsp;
                            <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiNoSpecificationForResource)]</FluentAnchor>
                        }
                    </div>
                }
                else
                {
                    <FluentSplitter
                        BarHandle="@ViewportInformation.IsDesktop"
                        Style="height:100%"
                        Panel1Size="@(ViewportInformation.IsDesktop ? "2fr" : "0")"
                        Panel2Size="8fr"
                        BarSize="@(ViewportInformation.IsDesktop ? 5 : 0)">

                        <Panel1>
                            @if (ViewportInformation.IsDesktop)
                            {
                                <TreeOpenApiMethodSelector
                                    @ref="_treeOpenApiMethodSelector"
                                    HandleSelectedTreeItemChangedAsync="@HandleSelectedTreeItemChangedAsync"
                                    SelectedTreeItem="@PageViewModel.SelectedTreeItem"
                                    Tags="@PageViewModel.Model.Tags" />
                            }
                        </Panel1>
                        <Panel2>
                            <SummaryDetailsView
                                @ref="_summaryDetailsView"
                                ShowDetails="@(PageViewModel.Response is not null)"
                                OnDismiss="@(() => ClearMethodResponse())"
                                SelectedValue="@PageViewModel.Response"
                                ViewKey="OpenApiResponse">
                                
                                <Summary>
                                    @if (PageViewModel.SelectedMethod == null)
                                    {
                                        @if (ViewportInformation.IsDesktop)
                                        {
                                            <p>@Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectMethod)]</p>
                                        }
                                        else
                                        {
                                            <div class="empty-content">
                                                <FluentAnchor Href="#" Appearance="Appearance.Hypertext" OnClick="@(async () => await _contentLayout!.OpenMobileToolbarAsync())">
                                                    @Loc[nameof(Dashboard.Resources.OpenApi.OpenApiSelectMethod)]
                                                </FluentAnchor>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="details-container">
                                            <header style="height: auto;">
                                                <div class="details-header-title" title="API Request">API Request</div>
                                                <div class="header-actions">
                                                    <FluentButton Appearance="Appearance.Stealth" BackgroundColor="@(ViewportInformation.IsDesktop ? null : "rgba(0, 0, 0, 0)")" IconEnd="@(new Icons.Regular.Size16.Play())"
                                                                  OnClick="SendRequest" Title="@Loc[nameof(ControlsStrings.SummaryDetailsViewCloseView)]" aria-label="@Loc[nameof(ControlsStrings.SummaryDetailsViewCloseView)]" />
                                                </div>
                                            </header>
                                            <OpenApiRequest
                                                @ref="_request"
                                                Document="@PageViewModel.Model.Document"
                                                Operation="@PageViewModel.Model.GetOperationFromMethod(PageViewModel.SelectedMethod)"
                                                Method="@HttpMethod.Parse(PageViewModel.SelectedMethod.MethodName)"
                                                Path="@PageViewModel.SelectedMethod.Path" />
                                        </div>
                                    }
                                </Summary>
                                <Details>
                                    <OpenApiResponse
                                        @ref="_response"
                                        Response="@context" />
                                </Details>
                                <DetailsTitleTemplate>
                                    API Response
                                    <FluentBadge BackgroundColor="@(context!.IsSuccessStatusCode ? "green" : "red")" Fill="highlight" slot="end">@((int)context.StatusCode) @context.StatusCode</FluentBadge>
                                </DetailsTitleTemplate>
                            </SummaryDetailsView>
                        </Panel2>
                    </FluentSplitter>
                }
            </div>
        </MainSection>
    </AspirePageContentLayout>
</div>
